{"version":3,"file":"static/js/749.77eb5db8.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Table.js","components/cart/Cart.js"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import Table from 'react-bootstrap/Table';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {plusCount, minusCount, deleteCart} from \"../../store/cart\";\r\nimport {changeName} from \"../../store/user\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {memo, useMemo, useState} from \"react\";\r\n\r\n// memo 사용법\r\nconst Child = memo(({count}) => {\r\n    console.log('replay')\r\n    console.log(count)\r\n    return <div>자식임</div>\r\n})\r\n\r\nconst Cart = () => {\r\n    //useMemo 사용법 최초에 한번만 실행한다.(렌더링시) 차이점 useEffect => 렌더링 후\r\n    //let result = useMemo(() => {return 무거운함수()},[state])\r\n    let user = useSelector((state) => state.user);\r\n    let cart = useSelector((state) => state.cart);\r\n    let dispatch = useDispatch()\r\n// memo 사용법\r\n//    let [count,setCount] = useState(0);\r\n\r\n    return (\r\n        <div>\r\n            <div style={{padding:\"50px\"}}>\r\n                <h1>{user} 님의 장바구니</h1><button onClick={() =>{dispatch(changeName('se'))}}>full name</button>\r\n                {/*<Child count ={count}></Child>\r\n                <button onClick={() => setCount(count+1)}>++</button>*/}\r\n            </div>\r\n            <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>상품명</th>\r\n                    <th>수량</th>\r\n                    <th>변경하기</th>\r\n                    <th>삭제</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    cart.map((data,index) =>\r\n                        <tr key={index}>\r\n                            <td></td>\r\n                            <td>{data.title}</td>\r\n                            <td>{data.count}</td>\r\n                            <td>\r\n                                <button onClick={() =>{dispatch(plusCount(data.id))}}>+</button>\r\n                                <button onClick={() =>{dispatch(minusCount(data.id))}}>-</button>\r\n                            </td>\r\n                            <td><Button variant=\"danger\" onClick={() =>{dispatch(deleteCart(index))}}>삭제</Button></td>\r\n                        </tr>\r\n                    )\r\n                }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;"],"names":["_excluded","React","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutProperties","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","_jsx","_objectSpread","responsiveClass","children","user","useSelector","state","cart","dispatch","useDispatch","_jsxs","style","padding","onClick","changeName","Table","map","data","index","title","count","plusCount","id","minusCount","Button","deleteCart"],"sourceRoot":""}